<?xml version="1.0" encoding="UTF-8"?>
<prompts>

	<prompt strategy="task" id="FILE_STEP_TIMEOUT_WARNING">
		<text>We need to start wrapping up.</text>
		<text>Okay, let's get ready to move on to reflection.</text>
	</prompt>

	
	<prompt strategy="task" id="FILE_STEP_TIMED_OUT">
		<text>We need to be moving along on this test case.</text>
		<text>Time for this test case is almost over.</text>
		<text>Time to move along on this test case if you can.</text>
	</prompt>
    
    <prompt strategy="task" id="FILE_STEP_COMPLETE">
       <text>You've passed the testcase!</text>
       <text>Great! You have passed the testcase.</text>
       <text>Way to go! You've passed the testcase.</text>
       <text>Good job. You've passed the testcase.</text>
    </prompt>
	
    <prompt strategy="task" id="WAIT_FOR_CHECKIN">
       <text>Okay, we're about to begin.</text>
    </prompt>
    
    <prompt strategy="task" id="TIMEOUT_WARNING">
       <text>We need to start wrapping up. Remember to type "ready" when you're ready to move on.</text>
       <text>Okay, let's get ready to move on. Remember to type "ready" if you're done with this step.</text>
    </prompt>

 
    <!-- PROMPTS DURING TASK 1 -->  
    
    <prompt strategy="task" id="P1a">
      	<text>Hint: Break your regex down to the key components:
1. An initial whitespace.  
2. The first integer number: digit(s) from 0 to 9.     
3. An optional *group*, which contains a hyphen and a second integer number.    
4. The word “hour” with an optional "s" character.  
5. Compile your expression.
6. Make your regex case-insensitive.</text>
    </prompt>   
    
    <prompt strategy="task" id="P1b">  
     	<text>Hint: 
     	-- You use a \ before symbols like a hyphen to indicate they are text. 
     	-- You can surround some of your regex element(s) with parentheses to create a group. 
     	</text>
    </prompt>


    <!-- PROMPTS DURING TASK 2 -->
    <prompt strategy="task" id="P2a">
     	<text>Hint: There is a short and simple built-in regex method for doing this.</text>
    </prompt>  


    <!-- PROMPTS DURING TASK 3 -->
    
    <prompt strategy="task" id="P3a">
      	<text>The key components for this regex are similar to Task 1. The only difference is adding a decimal point (.) and one or more digits following each integer.</text>
    </prompt>   
    
    <prompt strategy="task" id="P3b">
      	<text>The key components for this regex are 
1. An initial whitespace.   
2. The first decimal number: digit(s) from 0 to 9, a decimal point, digits from 0 to 9.   
3. An optional *group*, which contains a hyphen followed by a decimal number.    
4. The word “hour” with an optional “s” character.
5. Compile your expression.
6. Make your regex case-insensitive.</text>
    </prompt>  
 
 
    <!-- PROMPTS DURING TASK 4 -->
    <prompt strategy="task" id="P4a">
     	<text>Hint: The regex method for this decimal pattern is very similar to the method you created for Task 2, using a decimal pattern rather than an integer pattern.</text>
    </prompt>  
 
 
    <!-- PROMPTS DURING TASK 5 -->
    <prompt strategy="task" id="P5a">
     	<text>Hint: For this question, you want to write a regex pattern that will compile the raw string containing ‘two hours’ and/or ‘2 Hours’. Make sure to look back on the regex cheat sheet for what character will refer to “and/or”! </text>
    </prompt>   
        
     <prompt strategy="task" id="P4b">
     	<text>Hint 2: For using a single regex method to replace both of the specified phrases, use the format re.[insert regex method](replace_regex_pattern, [replacement phrase], recipe_text). Make sure to fill in the correct blanks! Best of luck on approaching this problem! </text>
     	
     </prompt>

    <!-- for READY_GENERIC -->    
    <prompt strategy="task" id="READY_GENERIC">
       <text>Type "ready" when you are ready to move on.</text>
    </prompt>
     
    <prompt strategy="task" id="READY_GENERIC_NO_READY">
       <text>We will move on after a while or when everyone is ready.</text>
    </prompt>
         
    <prompt strategy="task" id="WAIT_FOR_CONSENSUS">
       <text>When you've reached consensus in your group, type "ready".</text>
       <text>Make sure your partner agrees before continuing.</text>
       <text>We'll move to the next part once everyone is in agreement.</text>
    </prompt>
    
    <prompt strategy="task" id="ACKNOWLEDGE">
       <text>Thanks, [STUDENT]. Make sure your team is in agreement.</text>
       <text>Okay, [STUDENT]. Make sure your team agrees.</text>
       <text>Hang on until your team is ready, [STUDENT].</text>
       <text>Thanks, [STUDENT]. Hang on until your team is ready...</text>
    </prompt>
    
    <prompt strategy="task" id="ALL_READY">
       <text>Okay, let's move on...</text>
       <text>Moving on...</text>
       <text>Onward!</text>
    </prompt>
  
  
 <!-- ================================ -->
 <!-- The following prompts are unused -->
 <!-- ================================ -->
      
    <prompt strategy="task" id="WAIT_FOR_DISCUSSION">
       <text>We'll move on when everyone is ready.</text>
    </prompt>
       
    <prompt strategy="task" id="WAIT_FOR_READING">
       <text>Once you've read this and discussed it with your team, type "ready".</text>
       <text>When everyone is comfortable with this material, type "ready".</text>
    </prompt>
    
</prompts>

