<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE scenario SYSTEM "TuTalkScenario.dtd">
<scenario default-language="en" scenario-name="recorder_api">
	<configuration>
		
		<!-- It *is* possible to hook up a LightSide classifier to TuTalk, 
		such that the predicted labels are treated as concepts. 
		but not today. -->
			
		<!-- 	
		<module kind="model" name="animals"
			classname="edu.cmu.cs.lti.tutalk.module.SidePredictor">
			<param key="path" value="models/animals.ser" />
		</module> 
		-->

	</configuration>

	<!-- I'm not entirely sure what these are used for. -->
	<transitions>
		<transition ack-type="agree" floor-status="neutral">
			<tphrase> yes </tphrase>
			<tphrase> okay </tphrase>
		</transition>
	
		<transition ack-type="none">
			<tphrase> moving on... </tphrase>
		</transition>
	</transitions>
	
	<!-- 'Concepts' define things that students might say,
	     AND things that the tutor might say back. 
	     Tutor concepts should take the form of phrase lists.
		 Student concepts can be phrase lists, 
		 regular expressions, or lists of annotations,
	     but only one of these at a time. -->
		
	<concepts>
		<!-- this is a special kind of concept for catching unexpected student responses -->
		<concept label="unanticipated-response">
			<phrase>anything else</phrase>
		</concept>
		
		
		<!-- tutor concepts. -->
		<concept label="introduction">
			<phrase>I can help you to decide the type of audio source to be used and example code snippet to do it.</phrase>
		</concept>
		
		<concept label="audio_source">
			<phrase>Do you know or decided on any audio source that can be used?</phrase>
		</concept>
		
		<!-- the tutor will choose randomly between multiple phrases for a concept. -->
		<concept label="facts">
			<phrase>You may probably want to use one of the following possible audio sources
			camcorder
mic
default
remote submix
voice call
voice communication
voice downlink
voice recognition
voice uplink
			
			</phrase>
		</concept>
		
		<concept label="camcorder" type="regex">
			<phrase>camcorder</phrase>
		</concept>
		
		<concept label="mic" type="regex">
			<phrase>mic</phrase>
		</concept>
		
		<concept label="default" type="regex">
			<phrase>default</phrase>
		</concept>
	
			<concept label="remote submix" type="regex">
			<phrase>remote submix</phrase>
			<phrase>remote_submix</phrase>
		</concept>
		
				<concept label="voice call" type="regex">
			<phrase>voice call</phrase>
			<phrase>voice_call</phrase>
		</concept>
		
				<concept label="voice communication" type="regex">
			<phrase>voice communication</phrase>
			<phrase>voice_communication</phrase>
		</concept>
		
				<concept label="voice downlink" type="regex">
			<phrase>voice downlink</phrase>
			<phrase>voice_downlink</phrase>
		</concept>
		
				<concept label="voice uplink" type="regex">
			<phrase>voice uplink</phrase>
			<phrase>voice_uplink</phrase>
		</concept>
		
		
						<concept label="voice recognition" type="regex">
			<phrase>voice recognition</phrase>
			<phrase>voice_recognition</phrase>
		</concept>
		<concept label="unrecognized">
			<phrase>I don't know what that is.</phrase>
			<phrase>That doesn't make sense to me.</phrase>
		</concept>
		
		<concept label="correct">
			<phrase>Well done!</phrase>
			<phrase>Okeydoke.</phrase>
			<phrase>Sounds good...</phrase>
		</concept>

		
		<concept label="ok">
			<phrase>Ok</phrase>
		</concept>
		
        <concept label="camcorder_p">
			<phrase>Ok. You can use camcorder using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.CAMCORDER);
			</phrase>
		</concept>
		
		<concept label="mic_p">
			<phrase>Ok. You can use mic using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.MIC);
			</phrase>
		</concept>
		
		<concept label="default_p">
			<phrase>Ok. You can use default audio source using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.DEFAULT);
			</phrase>
		</concept>
	
			<concept label="remote_submix">
			<phrase>Ok. You can use remote submix using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.REMOTE_SUBMIX);
			</phrase>
		</concept>
		
				<concept label="voice_call">
			<phrase>Ok. You can use voice call using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.VOICE_CALL);
			</phrase>
		</concept>
		
				<concept label="voice_communication">
			<phrase>Ok. You can use voice communication using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.VOICE_COMMUNICATION);
			</phrase>
		</concept>
		
				<concept label="voice_downlink">
			<phrase>Ok. You can use voice downlink using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.VOICE_DOWNLINK);
			</phrase>
		</concept>
		
				<concept label="voice_uplink">
			<phrase>Ok. You can use voice uplink using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.VOICE_UPLINK);
			</phrase>
		</concept>
		
		
						<concept label="voice_recognition">
			<phrase>Ok. You can use camcorder using follwoing code snippet.
			recorder_obj.setAudioSource(MediaRecorder.AudioSource.VOICE_RECOGNITION);
			</phrase>
		</concept>
		
		<concept label="congrats">
			<phrase>You're ready to be a zoologist!</phrase>
		</concept>
		
		<concept label="dont_be_clever">
			<phrase>Aren't you clever?</phrase>
		</concept>
		<!-- ent tutor concepts. -->
		
		
		<!-- student concepts. -->
		
		<!-- these match against external (MessageAnnotator) annotations. -->
		<concept label="yes" type="annotation">
			<phrase>AFFIRMATIVE</phrase>
		</concept>
		
		<concept label="no" type="annotation">
			<phrase>NEGATIVE</phrase>
		</concept>
		
		<!-- these match against regular expressions. -->
		
		<concept label="audiorecord" type="regex">
			<phrase>audiorecord</phrase>
		</concept>
		
		
		<concept label="mediarecorder" type="regex">
			<phrase>mediarecorder</phrase>
		</concept>

		
		<!-- end student concepts. -->
		
	</concepts>
	
	
	<script>
		<goal name="start" difficulty="1">
			
			<step>
				<!-- deliver a statement from the concept named "introduction"  -->
				<initiation>introduction</initiation>
			</step>
			
			<step>
				<!-- Every step begins with an initating concept or literal phrase -->
				<initiation>audio_source</initiation>
				
				<!-- These are the "response" options. 
					If the concept between the tags matches the student statement, 
				    the "say" concept/phrase will be delivered by the tutor.
				    "push" adds another goal to the dialogue's stack. 
					 Note that goals should NOT be recursively nested. -->
					
				<response push="elicitate" say="ok">yes</response>
				<response push="remediate" say="ok">no</response>
                
				<!-- unanticipated-response is special: it's anything that doesn't match one of the above. -->
				<response push="remediate" say="ok">unanticipated-response</response>
			</step>
			
			
			<step>
				<initiation>Ok, move on.</initiation>
			</step>
		</goal>
		
		<!-- Goals are referenced by their names. "difficulty" is meaningless for now. -->
		<goal name="remediate" difficulty="0">
			<step>
				<initiation>Maybe this will help:</initiation>
			</step>
			<step>
				<!-- deliver a statement from the concept named "facts"  -->
				<initiation>facts</initiation>
			</step>
			<step>
				<initiation>Which one you will like to choose?</initiation>
                <response say="camcorder_p">camcorder</response>
				<response say="mic_p">mic</response>
                <response say="default_p">default</response>
				<response say="remote_submix_p">remote submix</response>
                <response say="voice_call_p">voice call</response>
				<response say="voice_communication_p">voice communication</response>
                <response say="voice_downlink_p">voice downlink</response>
				<response say="voice_uplink_p">voice uplink</response>
				<response say="voice_recognition_p">voice recognition</response>
				<response say="unrecognized">unanticipated-response</response>
			</step>
		</goal>
		
	   <goal name="elicitate" difficulty="0">

			<step>
				<initiation>Which audio source you will use?</initiation>
                <response say="camcorder_p">camcorder</response>
				<response say="mic_p">mic</response>
                <response say="default_p">default</response>
				<response say="remote_submix_p">remote submix</response>
                <response say="voice_call_p">voice call</response>
				<response say="voice_communication_p">voice communication</response>
                <response say="voice_downlink_p">voice downlink</response>
				<response say="voice_uplink_p">voice uplink</response>
				<response say="voice_recognition_p">voice recognition</response>
				<response say="unrecognized">unanticipated-response</response>
				<response say="unrecognized">unanticipated-response</response>
			</step>
		</goal>
		
	</script>

</scenario>
